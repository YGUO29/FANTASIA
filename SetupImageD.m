function msg = SetupImageD
% Setup When Trial Started

global TP

% TP.D.Vol Memory Allocation or Registration
TP.D.Vol.DataColRaw =           zeros(  TP.D.Exp.BCD.ImageNumSmplPerUpdt, 1,	'int16');
TP.D.Vol.DataColFlt =           zeros(  TP.D.Exp.BCD.ImageNumSmplPerUpdt, 1,   'single');
TP.D.Vol.PixlSmplMat =          zeros(  TP.D.Exp.BCD.ImageNumPixlPerUpdt, ...
                                        TP.D.Exp.BCD.ImageNumSmplPerPixl,      'single');
TP.D.Vol.PixlCol =              zeros(  TP.D.Exp.BCD.ImageNumPixlPerUpdt, 1,   'single');
TP.D.Vol.PixlCol2 =          	zeros(  TP.D.Exp.BCD.ImageNumPixlPerUpdt, 1,   'single');

% temp overwrite
TP.D.Exp.BCD.ImageNumPixlPerEdge = 150;

%% Image
switch TP.D.Exp.BCD.ScanMode 
    case '2D random'                   
        TP.D.Vol.LayerAbs{1} =  zeros(  TP.D.Exp.BCD.ScanNumPixlPerAxis, ...
                                        TP.D.Exp.BCD.ScanNumPixlPerAxis,       'single');
        TP.D.Vol.LayerDisp{1} = zeros(  TP.D.Exp.BCD.ScanNumPixlPerAxis,...
                                        TP.D.Exp.BCD.ScanNumPixlPerAxis,...
                                        3,                                  'uint8');
        TP.D.Exp.BCD.ImageImgFunc = 'updateImage2Drandom';
    case '2D raster'         
        TP.D.Vol.LayerAbsRaw{1} = ...
                                zeros(  TP.D.Exp.BCD.ScanNumPixlPerAxis, ...
                                        TP.D.Exp.BCD.ScanNumPixlPerAxis-1,     'single');
        TP.D.Vol.LayerAbs{1} = 	zeros(  TP.D.Exp.BCD.ScanNumPixlPerAxis,...
                                        TP.D.Exp.BCD.ScanNumPixlPerAxis-1, ...
                                                                            'single');
        TP.D.Vol.LayerAbsTR{1}= zeros(  TP.D.Exp.BCD.ScanNumPixlPerAxis-1,...
                                        TP.D.Exp.BCD.ScanNumPixlPerAxis, ...
                                                                            'single');                                                                        
        TP.D.Vol.LayerDisp{1} = zeros(  TP.D.Exp.BCD.ScanNumPixlPerAxis-1,...
                                        TP.D.Exp.BCD.ScanNumPixlPerAxis, ...
                                        3,                                  'uint8');
        TP.D.Exp.BCD.ImageImgFunc = 'updateImage';
    case '3D raster'   
        
        TP.D.Exp.BCD.ImageNumPixlPerEdge = NaN; % debugging assumption
        for i = 1:TP.D.Exp.BCD.ScanNumLayrPerVlme
        TP.D.Vol.LayerAbsRaw{i} = ...
                                zeros(  TP.D.Exp.BCD.ScanScanInd{i}.NumPixlPerAxis, ...
                                        TP.D.Exp.BCD.ScanScanInd{i}.NumPixlPerAxis-1, ...
                                                                            'single');
        TP.D.Vol.LayerAbs{i} = 	zeros(  TP.D.Exp.BCD.ScanScanInd{i}.NumPixlPerAxis, ...
                                        TP.D.Exp.BCD.ScanScanInd{i}.NumPixlPerAxis-1, ...
                                                                            'single');
        TP.D.Vol.LayerDisp{i} = zeros( 	TP.D.Exp.BCD.ScanScanInd{i}.NumPixlPerAxis, ...
                                        TP.D.Exp.BCD.ScanScanInd{i}.NumPixlPerAxis-1, ...     
                                        3,                                  'uint8');
        end
        TP.D.Exp.BCD.ImageImgFunc = 'updateImage3Draster'; 

    otherwise
end

msg = '';