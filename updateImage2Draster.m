function updateImage2Draster
% The function processes the raw data in	TP.D.Vol.DataColRaw,
% and puts the processed absolute image to  TP.D.Vol.LayerAbs{i}
% for 2D raster mode

global TP
 
%% Data Formmating & Pixelizing
    TP.D.Vol.DataColFlt = -single(TP.D.Vol.DataColRaw);

    if TP.D.Exp.BCD.ImageNumSmplPerPixl == 1
        TP.D.Vol.PixlCol = TP.D.Vol.DataColFlt;
    else
        TP.D.Vol.PixlSmplMat = ...
            reshape(	TP.D.Vol.DataColFlt,...
                        TP.D.Exp.BCD.ImageNumSmplPerPixl, ...
                        TP.D.Exp.BCD.ImageNumPixlPerUpdt)';
        TP.D.Vol.PixlCol = ...
            mean(       TP.D.Vol.PixlSmplMat,1);
    end
 
%% Updating Normalization
    if TP.D.Exp.BCD.ImageNumVlmePerUpdt == 1
        TP.D.Vol.PixlCol2 = TP.D.Vol.PixlCol;
    else
        TP.D.Vol.PixlSmplMat2 = ...
            reshape(    TP.D.Vol.PixlCol, ...
                        TP.D.Exp.BCD.ImageNumPixlPerUpdt / TP.D.Exp.BCD.ImageNumVlmePerUpdt, ...
                        TP.D.Exp.BCD.ImageNumVlmePerUpdt);
        TP.D.Vol.PixlCol2 = ...
             mean(   	TP.D.Vol.PixlSmplMat2(:,1:end),2);
    end
                    

%% Descanning Image
 	TP.D.Vol.LayerAbsRaw{1}(...
        TP.D.Exp.BCD.ScanScanInd{1}.Ind ...
                                        ) =...
        TP.D.Vol.PixlCol2;

    TP.D.Vol.LayerAbs{1} = [...
        TP.D.Vol.LayerAbsRaw{1}(...
            end-TP.D.Exp.BCD.ImageNumPixlPerEdge+1:end,	end-TP.D.Exp.BCD.ImageNumPixlPerEdge+1:end ),...
        TP.D.Vol.LayerAbsRaw{1}(...
            end-TP.D.Exp.BCD.ImageNumPixlPerEdge+1:end,	1:end-TP.D.Exp.BCD.ImageNumPixlPerEdge );...
        TP.D.Vol.LayerAbsRaw{1}(...
            1:end-TP.D.Exp.BCD.ImageNumPixlPerEdge,	end-TP.D.Exp.BCD.ImageNumPixlPerEdge+1:end ),...
        TP.D.Vol.LayerAbsRaw{1}(...
        	1:end-TP.D.Exp.BCD.ImageNumPixlPerEdge,	1:end-TP.D.Exp.BCD.ImageNumPixlPerEdge )];